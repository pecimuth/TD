#include "Grid.h"
#include <SFML/Graphics/Sprite.hpp>
#include <SFML/Graphics/RenderTarget.hpp>

Grid::Grid():
	width(30),
	height(20),
	blocks()
{
	blocks = {
		{119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,79,80,80,80,80,80,81},
		{119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,92,93,95,70,70,70,70,70,70,70,70,70,70,70,70,71,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,115,116,116,116,116,116,116,116,116,116,116,116,116,73,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,69,70,70,70,70,70,70,70,96,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,93,93,93,93,93,93,93,93,94,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,72,116,116,116,116,116,116,116,117,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,102,257,257,257,257,257,104},
		{119,119,119,119,119,119,119,119,92,93,94,119,119,119,119,119,119,119,119,119,119,119,119,125,126,126,126,126,126,127}
	};
}

Grid::Grid(int width, int height):
	width(width),
	height(height),
	blocks(height, std::vector<int>(width))
{
}

void Grid::draw(sf::RenderTarget& target, sf::RenderStates states) const
{
	sf::Sprite sprite;
	sprite.setTexture(*states.texture);
	for (int i = 0; i < height; ++i)
		for (int j = 0; j < width; ++j)
		{
			sprite.setPosition(Sector::SIZE * j, Sector::SIZE * i);
			const int block = blockAt(j, i);
			sprite.setTextureRect(sf::IntRect(
				block % TILESHEET_WIDTH * Sector::SIZE,
				block / TILESHEET_WIDTH * Sector::SIZE,
				Sector::SIZE,
				Sector::SIZE
			));
			target.draw(sprite, states);
		}
}

BlockCategory Grid::category(int block) const
{
	return BlockCategory::Clear;
}
